<div data-controller="hello"></div>

<div class="container">
  <div class="card main-card">
    <div class="card-header text-danger d-flex justify-content-between align-items-center" style="background-color: #23263a;">
      <h2 class="mb-0">Players</h2>
      <%= form_tag players_path,
          method: :get,
          class: "d-flex gap-2" do %>
        <%= select_tag "player[team_id]",
            options_from_collection_for_select(Team.all, :id, :name, params.dig(:player, :team_id)),
            prompt: "All Teams",
            class: "form-select form-select-sm",
            onchange: "this.form.submit()"
        %>
        <%= select_tag "player[positions][]",
            options_for_select(Player::VALID_POSITIONS, params.dig(:player, :positions)),
            prompt: "All Positions",
            class: "form-select form-select-sm",
            onchange: "this.form.submit()"
        %>
      <% end %>
    </div>

    <div class="card-body" style="background-color: #23263a;">
      <% if @players.any? %>
        <div class="table-responsive">
          <table class="table table-hover table-dark-custom" id="playersTable">
            <thead>
              <tr>
                <th>Name</th>
                <th>Team</th>
                <th>Positions</th>
                <th>Age</th>
                <th>Physical Stats</th>
                <th>Account?</th>
              </tr>
            </thead>
            <tbody>
              <% @players.each do |player| %>
                <tr class="editable-row" data-player-id="<%= player.id %>" style="cursor: pointer;">
                  <td><%= player.name %></td>
                  <td><%= player.team&.name || 'Not assigned' %></td>
                  <td><small><%= player.positions&.join(', ') %></small></td>
                  <td><%= player.age %></td>
                  <td>
                    <%= "#{player.height}cm, #{player.weight}kg" if player.height && player.weight %>
                  </td>
                  <td>
                    <% if player.user.present? %>
                      <i class="fas fa-check-circle text-success"></i>
                    <% else %>
                      <i class="fas fa-times-circle text-danger"></i>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% else %>
        <div class="alert alert-info">
          <i class="fas fa-info-circle me-2"></i>No players found.
        </div>
      <% end %>
    </div>

    <div class="d-flex justify-content-end p-3" style="background-color: #23263a;">
      <%= link_to new_player_path,
          class: "btn btn-success",
          data: { turbo_frame: "_top" } do %>
        <i class="fas fa-user-plus me-1"></i> Add Player
      <% end %>
    </div>
  </div>
</div>

<!-- Modal -->
<div id="editModal" class="modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); justify-content: center; align-items: center;">
  <div class="modal-content" style="background-color: #23263a; padding: 20px; border-radius: 5px; max-width: 500px; width: 100%;">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h3 class="text-light mb-0">Edit Player</h3>
      <button id="closeModal" class="btn btn-close btn-close-white"></button>
    </div>
    <div id="modalFormContent"></div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const modal = document.getElementById('editModal');
  const modalContent = document.getElementById('modalFormContent');
  const closeBtn = document.getElementById('closeModal');

  // Use event delegation on the table's <tbody>
  const tableBody = document.querySelector('#playersTable tbody');
  tableBody.addEventListener('click', function (e) {
    const row = e.target.closest('.editable-row');
    if (row) {
      const playerId = row.dataset.playerId;
      fetch(`/players/${playerId}/edit`)
        .then(response => response.text())
        .then(html => {
          modalContent.innerHTML = html;
          modal.style.display = 'flex';

          // Attach form submission handler
          const form = modalContent.querySelector('form');
          if (form) {
            form.addEventListener('submit', function(e) {
              e.preventDefault();
              const formData = new FormData(form);
              fetch(form.action, {
                method: form.method,
                body: formData,
                headers: {
                  'X-Requested-With': 'XMLHttpRequest',
                  'Accept': 'text/html'
                }
              })
              .then(response => {
                if (response.ok) {
                  modal.style.display = 'none';
                  location.reload();
                } else {
                  console.error('Failed to save');
                }
              })
              .catch(error => console.error('Error:', error));
            });
          }
        })
        .catch(error => console.error('Error:', error));
    }
  });

  // Close modal when clicking the close button
  closeBtn.addEventListener('click', () => {
    modal.style.display = 'none';
  });

  // Close modal when clicking outside the modal content
  window.addEventListener('click', function (e) {
    if (e.target === modal) {
      modal.style.display = 'none';
    }
  });
});
</script>
